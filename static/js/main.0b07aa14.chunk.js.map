{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","props","className","src","id","alt","name","email","CardList","robots","map","user","SearchBox","type","placeholder","onChange","searchChange","Scroll","children","App","useState","initArray","searchField","state","setState","useEffect","fetch","response","json","users","Array","from","length","event","save","console","log","aSearchField","target","value","filter","robot","toLocaleLowerCase","includes","toLowerCase","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAYeA,G,KAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,sBCQCQ,MAbf,SAAeC,GAEb,OACE,sBAAKC,UAAU,UAAf,UACE,qBAAKC,IAAG,+BAA0BF,EAAMG,GAAhC,iBAAmDC,IAAI,UAC/D,gCACE,6BAAKJ,EAAMK,OACb,4BAAIL,EAAMM,eCmBDC,MAzBf,SAAmBP,GAEjB,IAAMQ,EAASR,EAAMQ,OAErB,OACE,8BAEIA,EAAOC,KAAI,SAAAC,GACT,OACE,cAAC,EAAD,CACGP,GAAIO,EAAKP,GACTE,KAAMK,EAAKL,KACXC,MAAOI,EAAKJ,OAHJI,EAAKP,U,MCDbQ,MARf,SAAoBX,GAEpB,OACE,8BACE,uBAAOC,UAAU,UAAUW,KAAK,SAASC,YAAY,sBAAsBC,SAAUd,EAAMe,kB,MCOhFC,MAXf,SAAiBhB,GAEf,OACE,qBAAKG,GAAG,SAAR,SAEEH,EAAMiB,Y,MC0CGC,MA5Cf,WAEE,MAAqBC,mBAAS,CAACC,UAAY,GAAIZ,OAAQ,GAAGa,YAAc,KAAxE,mBAAKC,EAAL,KAAWC,EAAX,KAqBA,OAnBAC,qBAAU,WACRC,MAAM,8CAA8ChC,MAAK,SAAAiC,GACvDA,EAASC,OAAOlC,MAAK,SAAAmC,GACnBL,EAAS,CAACH,UAAUQ,EAAOpB,OAAOqB,MAAMC,KAAKF,GAAQP,YAAc,aAGvE,IAa2B,IAAzBC,EAAMF,UAAUW,OAGjB,8CAMC,sBAAK9B,UAAU,OAAf,UACE,6CACA,cAAC,EAAD,CAAWc,aAtBjB,SAAyBiB,GAEvB,IAAMC,EAAOJ,MAAMC,KAAKR,EAAMF,WAC9Bc,QAAQC,IAAIF,GACZ,IAAMG,EAAaJ,EAAMK,OAAOC,MAChCf,EAAS,CACPH,UAAUa,EACVzB,OAAQc,EAAMF,UAAUmB,QAAO,SAAAC,GAAK,OAAGA,EAAMnC,KAAKoC,oBAAoBC,SAASN,EAAaO,kBAC5FtB,YAAYe,OAeV,cAAC,EAAD,UACE,cAAC,EAAD,CAAU5B,OAAQc,EAAMd,eCrClCoC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1B1D,M","file":"static/js/main.0b07aa14.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport './Card.css';\r\nfunction Card (props)\r\n{\r\n  return (\r\n    <div className=\"cardEle\">\r\n      <img src={`https://robohash.org/${props.id}?size=200x200`} alt=\"Robot\"/>\r\n      <div>\r\n        <h2>{props.name}</h2>\r\n      <p>{props.email}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './Card.js';\r\n\r\nfunction CardList (props)\r\n{\r\n  const robots = props.robots;\r\n\r\n  return(\r\n    <div>\r\n      {\r\n        robots.map(user=>{\r\n          return (\r\n            <Card key={user.id}\r\n               id={user.id}\r\n               name={user.name}\r\n               email={user.email}/>)})\r\n      /* equiv to :\r\n       robots.map(function(user){\r\n          return (\r\n            <Card key={user.id}\r\n               id={user.id}\r\n               name={user.name}\r\n               email={user.email}/>)\r\n          })*/\r\n      }\r\n    </div>\r\n  );\r\n}\r\nexport default CardList;\r\n","import React from 'react';\r\nimport './SearchBox.css';\r\n\r\nfunction SearchBox (props)\r\n{\r\nreturn (\r\n  <div >\r\n    <input className=\"searchB\" type=\"search\" placeholder=\"Search Your Robot !\" onChange={props.searchChange}/>\r\n  </div>\r\n);\r\n}\r\nexport default SearchBox;\r\n","import React from 'react';\r\nimport './Scroll.css';\r\n\r\nfunction Scroll (props)\r\n{\r\n  return (\r\n    <div id=\"scroll\">\r\n    {\r\n      props.children\r\n    }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Scroll;\r\n","import React , {useState,useEffect} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox'\r\nimport Scroll from '../components/Scroll';\r\nimport './App.css'\r\n\r\nfunction App()\r\n{\r\n  let [state,setState]=useState({initArray : [] ,robots: [],searchField : ''});\r\n\r\n  useEffect(()=>{\r\n    fetch('https://jsonplaceholder.typicode.com/users').then(response=>{\r\n      response.json().then(users => {\r\n        setState({initArray:users, robots:Array.from(users), searchField : ''}) ;\r\n      } );\r\n    });\r\n  },[]);\r\n\r\n  function onSearchChange (event)\r\n  {\r\n    const save = Array.from(state.initArray);\r\n    console.log(save);\r\n    const aSearchField=event.target.value;\r\n    setState({\r\n      initArray:save,\r\n      robots: state.initArray.filter(robot =>robot.name.toLocaleLowerCase().includes(aSearchField.toLowerCase())),\r\n      searchField:aSearchField});\r\n    }\r\n\r\n  if (state.initArray.length===0)\r\n  {\r\n    return (\r\n     <h1>Loading ... </h1>\r\n    )\r\n  }\r\n  else\r\n  {\r\n    return (\r\n      <div className=\"main\">\r\n        <h1>RoboFriends</h1>\r\n        <SearchBox searchChange={onSearchChange}/>\r\n        <Scroll>\r\n          <CardList robots={state.robots}/>\r\n        </Scroll>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n}\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './containers/App.js';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}